stages:
  # - api-tests
  # - postman-api-tests
  - frontend-tests
  - acceptance-tests
  - build

frontend-tests:
  image: node:20-alpine
  stage: frontend-tests
  script:
    - cd ./front-end
    - npm install
    - export CI=false  # Disable treating warnings as errors
    - npm run test
    

acceptance-tests:
  stage: acceptance-tests
  image: python:3.10
  script:
  # Installing all required packages
  - pip install --upgrade pip
  - pip install --no-cache-dir -r ./tests/acceptance_tests/requirements.txt
  - apt-get update -q -y
  - apt-get --yes install libnss3
  - apt-get --yes install libgconf-2-4
  - apt-get install libx11-xcb1

  # Add chrome to container for Selenium
  - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
  - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
  - apt-get update -q -y 
  - apt-get install -y google-chrome-stable

  # Download and unzip the chromedriver
  - apt-get install -yqq unzip
  - wget -O /tmp/chromedriver.zip http://chromedriver.storage.googleapis.com/`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`/chromedriver_linux64.zip
  - unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/

  # Run selenium tests
  - python3 ./tests/acceptance_tests/run_all_tests.py


build-code-job:
  image: node:20-alpine
  stage: build
  script:
    - echo "Making the website"
    - cd ./front-end
    - npm install
    - CI=false
    - npm run build
